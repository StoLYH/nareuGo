deploy:
  stage: deploy
  before_script:
    - apt-get update -y && apt-get install -y openssh-client curl
  script:
    - |
      STATUS=$(curl -o /dev/null -w "%{http_code}" "http://$LIVE_SERVER_IP/env" || true)
      if [ "$STATUS" = "200" ]; then
        CURRENT_UPSTREAM=$(curl -s "http://$LIVE_SERVER_IP/env")
      else
        CURRENT_UPSTREAM=green
      fi
      echo "현재 upstream: $CURRENT_UPSTREAM"

      if [ "$CURRENT_UPSTREAM" = "blue" ]; then
        CURRENT_PORT=8080
        STOPPED_PORT=8081
        TARGET_UPSTREAM=green
      elif [ "$CURRENT_UPSTREAM" = "green" ]; then
        CURRENT_PORT=8081
        STOPPED_PORT=8080
        TARGET_UPSTREAM=blue
      else
        echo "error"; exit 1
      fi

      ssh -o StrictHostKeyChecking=no ubuntu@$LIVE_SERVER_IP "
        sudo docker pull $DOCKER_IMAGE:latest &&
        sudo docker-compose -f docker-compose-${TARGET_UPSTREAM}.yml up -d
      "

      curl --retry 6 --retry-delay 10 http://$LIVE_SERVER_IP:$STOPPED_PORT/env || exit 1

      ssh -o StrictHostKeyChecking=no ubuntu@$LIVE_SERVER_IP "
        sudo docker exec -i nginxserver bash -c 'echo \"set \\\$service_url ${TARGET_UPSTREAM};\" > /etc/nginx/conf.d/service-env.inc && nginx -s reload'
      "

      ssh -o StrictHostKeyChecking=no ubuntu@$LIVE_SERVER_IP "
        sudo docker stop ${CURRENT_UPSTREAM} && sudo docker rm ${CURRENT_UPSTREAM}
      "
  only:
    - master
