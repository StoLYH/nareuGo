stages:
  - build
  - deploy

variables:
  DOCKER_IMAGE: $DOCKERHUB_USERNAME/a501

build-backend:
  stage: build
  image: gradle:7-jdk11
  script:
    - cd NareuGO_Backend
    - chmod +x ./gradlew
    - ./gradlew clean build -x test
    - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_TOKEN"
    - docker build --platform linux/amd64 -t $DOCKER_IMAGE:latest -f Dockerfile .
    - docker push $DOCKER_IMAGE:latest
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - NareuGO_Backend/**/*

build-frontend:
  stage: build
  image: node:18
  script:
    - cd FrontEnd
    - npm install
    - npm run build
  artifacts:
    paths:
      - FrontEnd/dist/
    expire_in: 1 hour
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - FrontEnd/**/*

deploy:
  stage: deploy
  dependencies:
    - build-frontend
  before_script:
    - apt-get update -y && apt-get install -y openssh-client curl rsync
    - mkdir -p ~/.ssh
    - echo "$EC2_SSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $LIVE_SERVER_IP >> ~/.ssh/known_hosts
  script:
    # 프론트엔드 배포
    - rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" ./FrontEnd/dist/ ubuntu@$LIVE_SERVER_IP:/var/www/html/

    # 백엔드 무중단 배포
    - STATUS=$(curl -o /dev/null -w "%{http_code}" "http://$LIVE_SERVER_IP/env" || true)
    - |
      if [ "$STATUS" = "200" ]; then
        CURRENT_UPSTREAM=$(curl -s "http://$LIVE_SERVER_IP/env")
      else
        CURRENT_UPSTREAM=green
      fi
    - |
      if [ "$CURRENT_UPSTREAM" = "blue" ]; then
        TARGET_UPSTREAM=green
        STOPPED_PORT=8081
      else
        TARGET_UPSTREAM=blue
        STOPPED_PORT=8080
      fi
    - ssh -o StrictHostKeyChecking=no ubuntu@$LIVE_SERVER_IP "sudo docker pull $DOCKER_IMAGE:latest"
    - ssh -o StrictHostKeyChecking=no ubuntu@$LIVE_SERVER_IP "sudo docker-compose -f docker-compose-${TARGET_UPSTREAM}.yml up -d"
    - |
      RETRY=0
      MAX_RETRY=30
      until curl -s http://$LIVE_SERVER_IP:$STOPPED_PORT/env > /dev/null; do
        RETRY=$((RETRY+1))
        if [ $RETRY -ge $MAX_RETRY ]; then
          echo 'Health Check 실패'
          exit 1
        fi
        sleep 10
      done
    - ssh -o StrictHostKeyChecking=no ubuntu@$LIVE_SERVER_IP "sudo docker exec -i nginxserver bash -c 'echo \"set \\\$service_url ${TARGET_UPSTREAM};\" > /etc/nginx/conf.d/service-env.inc && nginx -s reload'"
    - ssh -o StrictHostKeyChecking=no ubuntu@$LIVE_SERVER_IP "sudo docker stop ${CURRENT_UPSTREAM} || true && sudo docker rm ${CURRENT_UPSTREAM} || true"
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - NareuGO_Backend/**/*
        - FrontEnd/**/*
