# ====================================================================
# 프론트엔드 CI/CD 파이프라인
# ====================================================================

# 1. 프론트엔드 빌드 잡(Job)
build-frontend:
  stage: build
  image: node:20
  tags:
    - ec2-runner
  script:
    - echo "====== [Frontend] Vue 프로젝트 빌드를 시작합니다. ======"
    - cd FrontEnd
    # ✅ GitLab 변수로부터 .env.production 생성
    - echo "VITE_BASE_URL=$VITE_BASE_URL" > .env.production
    - echo "VITE_TOSS_CLIENT_KEY=$VITE_TOSS_CLIENT_KEY" >> .env.production
    - echo "VITE_KAKAO_MAP_API_KEY=$VITE_KAKAO_MAP_API_KEY" >> .env.production
    - npm install
    - npm run build
    - echo "====== [Frontend] 빌드 결과물(dist)을 artifacts로 저장합니다. ======"
  artifacts:
    paths:
      - FrontEnd/dist/
    expire_in: 1 hour
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - FrontEnd/**/*

# 2. 프론트엔드 배포 잡(Job)
deploy-frontend:
  stage: deploy
  tags:
    - ec2-runner
  dependencies:
    - build-frontend # build-frontend 잡의 결과물(artifacts)을 가져옵니다.
  before_script:
    - echo "====== [Deploy-FE] 배포 환경을 준비합니다. (패키지 설치 및 SSH 설정) ======"
    - apk update && apk add openssh-client rsync
    - mkdir -p ~/.ssh
    - echo "$EC2_SSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $LIVE_SERVER_IP >> ~/.ssh/known_hosts
  script:
    - echo "====== [Deploy-FE] 프론트엔드 파일 배포 시작 ======"
    - rsync -avz --delete ./FrontEnd/dist/ ubuntu@$LIVE_SERVER_IP:/var/www/html/
    - echo "✅ [Deploy-FE] 프론트엔드 파일 배포 완료"
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - FrontEnd/**/*
